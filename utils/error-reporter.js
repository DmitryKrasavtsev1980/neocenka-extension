/**
 * –°–∏—Å—Ç–µ–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–æ–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤ Telegram –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
 */

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤ Telegram
 * @param {Object} errorInfo - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
 * @param {string} errorInfo.parameter - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
 * @param {string} errorInfo.error - –æ–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
 * @param {string} errorInfo.url - —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
 * @param {string} errorInfo.source - –∏—Å—Ç–æ—á–Ω–∏–∫ (avito/cian)
 * @param {string} errorInfo.method - –º–µ—Ç–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
 * @param {Object} errorInfo.context - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (—Å–µ–ª–µ–∫—Ç–æ—Ä—ã, –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ —Ç.–¥.)
 */
function reportParsingError(errorInfo) {
    const {
        parameter = '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä',
        error = '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
        url = 'URL –Ω–µ —É–∫–∞–∑–∞–Ω',
        source = '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫',
        method = '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–µ—Ç–æ–¥',
        context = {}
    } = errorInfo;

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    let message = `üö® –û–®–ò–ë–ö–ê –ü–ê–†–°–ò–ù–ì–ê\n\n`;
    message += `üìç –ò—Å—Ç–æ—á–Ω–∏–∫: ${source}\n`;
    message += `üîß –ü–∞—Ä–∞–º–µ—Ç—Ä: ${parameter}\n`;
    message += `‚öôÔ∏è –ú–µ—Ç–æ–¥: ${method}\n`;
    message += `‚ùå –û—à–∏–±–∫–∞: ${error}\n\n`;
    message += `üîó URL: ${url}\n\n`;

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –µ—Å–ª–∏ –µ—Å—Ç—å
    if (context.selectors && context.selectors.length > 0) {
        message += `üéØ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã:\n`;
        context.selectors.forEach(selector => {
            message += `‚Ä¢ ${selector}\n`;
        });
        message += '\n';
    }

    if (context.foundElements !== undefined) {
        message += `üìä –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${context.foundElements}\n\n`;
    }

    if (context.expectedValue) {
        message += `üí≠ –û–∂–∏–¥–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${context.expectedValue}\n\n`;
    }

    if (context.actualValue) {
        message += `üìã –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${context.actualValue}\n\n`;
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –æ—à–∏–±–∫–∏
    const timestamp = new Date().toLocaleString('ru-RU', {
        timeZone: 'Asia/Novosibirsk',
        year: 'numeric',
        month: '2-digit',
        day: '2-digit',
        hour: '2-digit',
        minute: '2-digit'
    });
    message += `‚è∞ –í—Ä–µ–º—è: ${timestamp}`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    SendMessageTelegram(message);
}

/**
 * –ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
 * @param {string} text - —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
function SendMessageTelegram(text) {
    let url = 'https://api.telegram.org/bot';
    let token = '';
    let chatId = '';
    
    // –ö–æ–¥–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è URL
    const encodedText = encodeURIComponent(text);
    
    fetch(url + token + '/sendMessage?chat_id=' + chatId + '&text=' + encodedText,
        {
            method: 'GET',
        },
    )
    .then(response => response.json())
    .then(data => {
        if (!data.ok) {
            console.error('Telegram API error:', data);
        }
    })
    .catch(error => {
        // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É
        setTimeout(function() {
            SendMessageTelegram(text);
        }, 60000);
    });
}

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –æ–± –æ—à–∏–±–∫–µ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
 * @param {string} parameter - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
 * @param {Array<string>} selectors - —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
 * @param {string} url - URL –æ–±—ä—è–≤–ª–µ–Ω–∏—è
 * @param {string} method - –º–µ—Ç–æ–¥ –ø–∞—Ä—Å–∏–Ω–≥–∞
 */
function reportSelectorError(parameter, selectors, url, method = '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–µ—Ç–æ–¥') {
    reportParsingError({
        parameter: parameter,
        error: '–ù–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –æ–¥–∏–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å–µ–ª–µ–∫—Ç–æ—Ä',
        url: url,
        source: url.includes('avito') ? 'avito' : (url.includes('cian') ? 'cian' : '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'),
        method: method,
        context: {
            selectors: selectors,
            foundElements: 0
        }
    });
}

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—á–µ—Ç–∞ –æ–± –æ—à–∏–±–∫–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
 * @param {string} parameter - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
 * @param {string} selector - —Å–µ–ª–µ–∫—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—à–µ–ª —ç–ª–µ–º–µ–Ω—Ç
 * @param {string} actualValue - —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 * @param {string} expectedValue - –æ–∂–∏–¥–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è
 * @param {string} url - URL –æ–±—ä—è–≤–ª–µ–Ω–∏—è
 * @param {string} method - –º–µ—Ç–æ–¥ –ø–∞—Ä—Å–∏–Ω–≥–∞
 */
function reportExtractionError(parameter, selector, actualValue, expectedValue, url, method = '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–µ—Ç–æ–¥') {
    reportParsingError({
        parameter: parameter,
        error: '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞',
        url: url,
        source: url.includes('avito') ? 'avito' : (url.includes('cian') ? 'cian' : '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'),
        method: method,
        context: {
            selectors: [selector],
            foundElements: 1,
            actualValue: actualValue,
            expectedValue: expectedValue
        }
    });
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { 
        reportParsingError, 
        reportSelectorError, 
        reportExtractionError, 
        SendMessageTelegram 
    };
}

// –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
window.reportParsingError = reportParsingError;
window.reportSelectorError = reportSelectorError;
window.reportExtractionError = reportExtractionError;
window.SendMessageTelegram = SendMessageTelegram;