/**
 * FlippingController - –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –æ—Ç—á—ë—Ç–∞ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ —Ñ–ª–∏–ø–ø–∏–Ω–≥
 * –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ UI
 * –°–ª–µ–¥—É–µ—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ v0.1
 */
class FlippingController extends EventTarget {
    constructor(diContainer) {
        super();
        
        this.diContainer = diContainer;
        
        // –°–µ—Ä–≤–∏—Å—ã (–±—É–¥—É—Ç –∏–Ω–∂–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ DI)
        this.realEstateObjectService = null;
        this.validationService = null;
        this.errorHandlingService = null;
        this.configService = null;
        
        // UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        this.flippingTable = null;
        this.flippingMap = null;
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ
        this.currentFilters = this.getDefaultFilters();
        this.currentSegment = null;
        this.objects = [];
        this.filteredObjects = [];
        
        this.debugEnabled = false;
        this.initialized = false;
        
        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –º–µ—Ç–æ–¥–æ–≤
        this.handleFilterChange = this.handleFilterChange.bind(this);
        this.applyFilters = this.applyFilters.bind(this);
        this.showObjectDetails = this.showObjectDetails.bind(this);
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ —á–µ—Ä–µ–∑ DI
     */
    async initialize() {
        if (this.initialized) return;

        try {
            // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã —á–µ—Ä–µ–∑ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            this.realEstateObjectService = await this.diContainer.get('RealEstateObjectService');
            this.validationService = await this.diContainer.get('ValidationService');
            this.errorHandlingService = await this.diContainer.get('ErrorHandlingService');
            this.configService = await this.diContainer.get('ConfigService');

            await this.loadDebugSettings();

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
            await this.initializeUIComponents();

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            this.setupEventHandlers();

            // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ HTML
            window.flippingController = this;

            this.initialized = true;

            if (this.debugEnabled) {
                console.log('üè† FlippingController: –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            }

        } catch (error) {
            console.error('‚ùå FlippingController: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            throw error;
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç–ª–∞–¥–∫–∏
     */
    async loadDebugSettings() {
        try {
            const debugConfig = await this.configService.get('debug.enabled');
            this.debugEnabled = debugConfig === true;
        } catch (error) {
            this.debugEnabled = false;
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
     */
    async initializeUIComponents() {
        try {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É
            this.flippingTable = new FlippingTable(
                'flippingTable',
                this.errorHandlingService,
                this.configService
            );
            await this.flippingTable.initialize();

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É
            this.flippingMap = new FlippingMap(
                'flippingProfitabilityMap',
                this.errorHandlingService,
                this.configService
            );
            await this.flippingMap.initialize();

            if (this.debugEnabled) {
                console.log('üè† FlippingController: UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
            }

        } catch (error) {
            console.error('‚ùå FlippingController: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ UI:', error);
            throw error;
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventHandlers() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ (–æ–Ω–∏ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ FlippingProfitabilityManager)
        // –ó–¥–µ—Å—å –º—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –æ—Ç –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        
        // –°–æ–±—ã—Ç–∏—è –∫–∞—Ä—Ç—ã
        this.addEventListener('object:selected', (event) => {
            this.handleObjectSelection(event.detail.object);
        });

        // –°–æ–±—ã—Ç–∏—è —Ç–∞–±–ª–∏—Ü—ã
        this.addEventListener('objects:filtered', (event) => {
            this.handleObjectsFiltered(event.detail.objects);
        });
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     */
    getDefaultFilters() {
        return {
            rooms: [],
            priceFrom: 0,
            priceTo: 10000000000,
            profitabilityPercent: 60,
            participants: 'flipper',
            profitSharing: '50/50',
            fixedPayment: 250000,
            financing: 'cash',
            downPayment: 20,
            mortgageRate: 17,
            mortgageTerm: 20,
            taxType: 'ip',
            renovationSpeed: 1.5,
            renovationType: 'auto',
            workCost: 10000,
            materialsCost: 10000,
            additionalExpenses: 100000
        };
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞
     */
    setCurrentSegment(segment) {
        this.currentSegment = segment;
        
        if (this.debugEnabled) {
            console.log('üè† FlippingController: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å–µ–≥–º–µ–Ω—Ç:', segment?.name);
        }

        // –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–µ–≥–º–µ–Ω—Ç–∞
        this.emit('segment:changed', { segment });
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
     */
    handleFilterChange(filters) {
        this.currentFilters = { ...this.currentFilters, ...filters };
        
        if (this.debugEnabled) {
            console.log('üè† FlippingController: –§–∏–ª—å—Ç—Ä—ã –∏–∑–º–µ–Ω–µ–Ω—ã:', this.currentFilters);
        }

        // –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
        this.emit('filters:changed', { filters: this.currentFilters });
    }

    /**
     * –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
     */
    async applyFilters() {
        console.log('üîç FlippingController.applyFilters(): –ù–ê–ß–ê–õ–û –º–µ—Ç–æ–¥–∞');
        console.log('üîç FlippingController.applyFilters(): errorHandlingService —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', !!this.errorHandlingService);
        
        try {
            console.log('üîç FlippingController: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–∞—á–∞–ª–æ—Å—å');
            console.log('üîç FlippingController: currentSegment:', this.currentSegment?.name, 'ID:', this.currentSegment?.id);
            console.log('üîç FlippingController: currentFilters:', this.currentFilters);

            if (!this.currentSegment) {
                throw new Error('–ù–µ –≤—ã–±—Ä–∞–Ω —Å–µ–≥–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞');
            }

            console.log('üîç FlippingController: –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –¥–ª—è —Å–µ–≥–º–µ–Ω—Ç–∞:', this.currentSegment.id);

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            this.objects = await this.realEstateObjectService.getObjectsBySegment(
                this.currentSegment.id,
                { includeAddress: true }
            );

            console.log('üîç FlippingController: –ü–æ–ª—É—á–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤ –æ—Ç RealEstateObjectService:', this.objects?.length || 0);
            console.log('üîç FlippingController: –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö objects:', typeof this.objects, 'isArray:', Array.isArray(this.objects));

            if (!Array.isArray(this.objects)) {
                console.log('üîç FlippingController: objects –Ω–µ –º–∞—Å—Å–∏–≤, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤');
                this.objects = [];
            }

            if (this.objects.length === 0) {
                console.log('üîç FlippingController: –ù–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Å–µ–≥–º–µ–Ω—Ç–µ, –ø—Ä–æ–≤–µ—Ä–∏–º window.db.getObjectsBySegment –Ω–∞–ø—Ä—è–º—É—é');
                
                // –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç window.db –Ω–∞–ø—Ä—è–º—É—é
                try {
                    const directObjects = await window.db.getObjectsBySegment(this.currentSegment.id);
                    console.log('üîç FlippingController: window.db.getObjectsBySegment –≤–µ—Ä–Ω—É–ª:', directObjects?.length || 0, '–æ–±—ä–µ–∫—Ç–æ–≤');
                    console.log('üîç FlippingController: –ü–µ—Ä–≤—ã–µ 3 –æ–±—ä–µ–∫—Ç–∞:', directObjects?.slice(0, 3));
                } catch (error) {
                    console.error('üîç FlippingController: –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ window.db.getObjectsBySegment:', error);
                }
                
                throw new Error('–í –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å–µ–≥–º–µ–Ω—Ç–µ –Ω–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏');
            }

            console.log('üîç FlippingController: –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∫', this.objects.length, '–æ–±—ä–µ–∫—Ç–∞–º');

            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
            this.filteredObjects = this.realEstateObjectService.filterObjects(
                this.objects, 
                this.currentFilters
            );

            console.log('üîç FlippingController: –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤:', this.filteredObjects.length);

            if (this.filteredObjects.length === 0) {
                throw new Error('–ù–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–¥–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º');
            }

            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
            this.filteredObjects = this.filteredObjects.map(obj => ({
                ...obj,
                profitability: this.realEstateObjectService.calculateProfitability(obj, this.currentFilters)
            }));

            console.log('üîç FlippingController: –û–±–Ω–æ–≤–ª—è–µ–º UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã');

            // –û–±–Ω–æ–≤–ª—è–µ–º UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
            await this.updateUIComponents();

            // –î–∞—ë–º –≤—Ä–µ–º—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è, –∑–∞—Ç–µ–º –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç—É
            setTimeout(() => {
                if (this.flippingMap && this.flippingMap.map) {
                    this.flippingMap.map.invalidateSize();
                    if (this.debugEnabled) {
                        console.log('üîç FlippingController: –ö–∞—Ä—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞');
                    }
                }
            }, 500);

            // –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
            this.emit('filters:applied', { 
                objects: this.filteredObjects,
                filters: this.currentFilters 
            });

            console.log('üîç FlippingController: applyFilters –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ, –æ–±—ä–µ–∫—Ç–æ–≤:', this.filteredObjects.length);
            return this.filteredObjects;

        } catch (error) {
            console.error('üîç FlippingController: –û–®–ò–ë–ö–ê –≤ applyFilters:', error);
            // –£–≤–µ–¥–æ–º–ª—è–µ–º ErrorHandlingService –æ–± –æ—à–∏–±–∫–µ
            await this.errorHandlingService.handleError(error, { context: 'applyFilters' });
            throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
     */
    async updateUIComponents() {
        try {
            console.log('üîç FlippingController: updateUIComponents() –Ω–∞—á–∞—Ç');
            console.log('üîç FlippingController: flippingTable —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', !!this.flippingTable);
            console.log('üîç FlippingController: flippingMap —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', !!this.flippingMap);
            console.log('üîç FlippingController: filteredObjects –¥–ª—è UI:', this.filteredObjects?.length || 0);

            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
            if (this.flippingTable) {
                console.log('üîç FlippingController: –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É...');
                await this.flippingTable.updateData(this.filteredObjects, this.currentFilters);
                console.log('üîç FlippingController: –¢–∞–±–ª–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
            } else {
                console.log('üîç FlippingController: –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç—É
            if (this.flippingMap) {
                console.log('üîç FlippingController: –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç—É...');
                await this.flippingMap.updateObjects(this.filteredObjects, this.currentFilters);
                console.log('üîç FlippingController: –ö–∞—Ä—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
            } else {
                console.log('üîç FlippingController: –ö–∞—Ä—Ç–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            }

            console.log('üîç FlippingController: UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');

        } catch (error) {
            console.error('‚ùå FlippingController: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI:', error);
            throw error;
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –æ–±—ä–µ–∫—Ç–∞
     */
    handleObjectSelection(object) {
        if (this.debugEnabled) {
            console.log('üè† FlippingController: –í—ã–±—Ä–∞–Ω –æ–±—ä–µ–∫—Ç:', object.id);
        }

        // –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –≤—ã–±–æ—Ä–∞ –æ–±—ä–µ–∫—Ç–∞
        this.emit('object:selected', { object });
    }

    /**
     * –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –æ–±—ä–µ–∫—Ç–∞
     */
    showObjectDetails(objectId) {
        const object = this.filteredObjects.find(obj => obj.id === objectId);
        
        if (!object) {
            console.error('‚ùå FlippingController: –û–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω:', objectId);
            return;
        }

        const profitability = object.profitability || {};
        const roomsText = object.rooms === 0 || object.rooms === 'studio' ? '–°—Ç—É–¥–∏—è' : `${object.rooms}-–∫–æ–º–Ω–∞—Ç–Ω–∞—è`;
        const address = object.address?.address_string || '–ê–¥—Ä–µ—Å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω';
        const price = object.price ? new Intl.NumberFormat('ru-RU').format(object.price) + ' ‚ÇΩ' : '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
        const area = object.area ? `${object.area} –º¬≤` : '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
        const profitabilityText = `${profitability.annualReturn?.toFixed(1) || 0}% –≥–æ–¥–æ–≤—ã—Ö`;
        const totalProfitText = profitability.totalProfit ? 
            new Intl.NumberFormat('ru-RU').format(Math.round(profitability.totalProfit)) + ' ‚ÇΩ' : '‚Äî';

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–ª–∏ –∞–ª–µ—Ä—Ç —Å –¥–µ—Ç–∞–ª—è–º–∏
        alert(`–î–µ—Ç–∞–ª–∏ –æ–±—ä–µ–∫—Ç–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:

${roomsText} –∫–≤–∞—Ä—Ç–∏—Ä–∞
${address}
–ü–ª–æ—â–∞–¥—å: ${area}
–¶–µ–Ω–∞: ${price}

–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: ${profitabilityText}
–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–∞—è –ø—Ä–∏–±—ã–ª—å: ${totalProfitText}`);

        // –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –ø–æ–∫–∞–∑–∞ –¥–µ—Ç–∞–ª–µ–π
        this.emit('object:details:shown', { object });
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    getStatistics() {
        const objectsStats = this.realEstateObjectService.getObjectsStatistics(this.filteredObjects);
        const mapStats = this.flippingMap ? this.flippingMap.getMarkersStatistics() : null;

        return {
            objects: objectsStats,
            map: mapStats,
            filters: this.currentFilters,
            timestamp: new Date().toISOString()
        };
    }

    /**
     * –≠–º–∏—Å—Å–∏—è —Å–æ–±—ã—Ç–∏–π (helper –º–µ—Ç–æ–¥)
     */
    emit(eventName, data = {}) {
        const event = new CustomEvent(eventName, { detail: data });
        this.dispatchEvent(event);

        if (this.debugEnabled) {
            console.log(`üè† FlippingController: –°–æ–±—ã—Ç–∏–µ "${eventName}"`, data);
        }
    }

    /**
     * –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
     */
    destroy() {
        // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        if (this.flippingTable) {
            this.flippingTable.destroy();
            this.flippingTable = null;
        }

        if (this.flippingMap) {
            this.flippingMap.destroy();
            this.flippingMap = null;
        }

        // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.objects = [];
        this.filteredObjects = [];
        this.currentSegment = null;
        
        // –£–¥–∞–ª—è–µ–º –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
        if (window.flippingController === this) {
            delete window.flippingController;
        }

        this.initialized = false;

        if (this.debugEnabled) {
            console.log('üè† FlippingController: –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —É–Ω–∏—á—Ç–æ–∂–µ–Ω');
        }
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = FlippingController;
}