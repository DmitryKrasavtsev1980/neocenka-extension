/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
 * –°–ª–µ–¥—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø–∞–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã v0.1 –∏ SOLID
 */

class CustomParametersSettingsInitializer {
    constructor() {
        this.diContainer = null;
        this.customParametersManagerPanel = null;
        this.isInitialized = false;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
     */
    async initialize() {
        try {
            if (this.isInitialized) {
                return;
            }

            console.log('üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö...');

            // –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            await this.waitForDatabase();

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...');

            if (window.DIContainer && typeof window.DIContainer.get === 'function') {
                console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π DIContainer');
                this.diContainer = window.DIContainer;
            } else {
                console.warn('‚ö†Ô∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–π DIContainer –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
                console.log('window.DIContainer:', window.DIContainer);
                console.log('typeof window.DIContainer:', typeof window.DIContainer);
                if (window.DIContainer) {
                    console.log('DIContainer.get:', window.DIContainer.get);
                    console.log('typeof DIContainer.get:', typeof window.DIContainer.get);
                }

                console.log('üèóÔ∏è –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...');
                await this.initializeLocalDI();

                console.log('üîç –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:');
                console.log('this.diContainer:', this.diContainer);
                console.log('typeof this.diContainer.get:', typeof (this.diContainer && this.diContainer.get));
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω
            if (!this.diContainer || typeof this.diContainer.get !== 'function') {
                console.error('‚ùå –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å');
                console.error('‚ùå this.diContainer:', this.diContainer);
                console.error('‚ùå this.diContainer —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', !!this.diContainer);
                console.error('‚ùå this.diContainer.get —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', !!(this.diContainer && this.diContainer.get));
                console.error('‚ùå –¢–∏–ø this.diContainer.get:', typeof (this.diContainer && this.diContainer.get));
                throw new Error('DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –±—ã–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            }

            console.log('‚úÖ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');

            // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
            const container = document.getElementById('custom-parameters-manager-container');
            if (!container) {
                console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
                return;
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–ª–∞—Å—Å–æ–≤ –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
            if (typeof CustomParametersService === 'undefined') {
                throw new Error('CustomParametersService –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            }
            if (typeof ObjectCustomValuesService === 'undefined') {
                throw new Error('ObjectCustomValuesService –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            }
            if (typeof CustomParametersManagerPanel === 'undefined') {
                throw new Error('CustomParametersManagerPanel –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            }
            if (typeof PARAMETER_TYPES === 'undefined') {
                throw new Error('PARAMETER_TYPES –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
            }
            if (typeof CustomParameterModel === 'undefined') {
                throw new Error('CustomParameterModel –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            }
            if (typeof ObjectCustomValueModel === 'undefined') {
                throw new Error('ObjectCustomValueModel –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            }

            console.log('üîß –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –∏–∑ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...');

            // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –∏–∑ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
            let customParametersService, objectCustomValuesService, validationService, errorHandler;

            try {
                customParametersService = this.diContainer.get('CustomParametersService');
                console.log('‚úÖ CustomParametersService –ø–æ–ª—É—á–µ–Ω');
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è CustomParametersService:', error);
                throw error;
            }

            try {
                objectCustomValuesService = this.diContainer.get('ObjectCustomValuesService');
                console.log('‚úÖ ObjectCustomValuesService –ø–æ–ª—É—á–µ–Ω');
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ObjectCustomValuesService:', error);
                throw error;
            }

            try {
                validationService = this.diContainer.get('ValidationService');
                console.log('‚úÖ ValidationService –ø–æ–ª—É—á–µ–Ω');
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ValidationService:', error);
                throw error;
            }

            try {
                errorHandler = this.diContainer.get('ErrorHandlingService');
                console.log('‚úÖ ErrorHandlingService –ø–æ–ª—É—á–µ–Ω');
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ErrorHandlingService:', error);
                throw error;
            }

            console.log('‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');

            // –°–æ–∑–¥–∞–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            this.customParametersManagerPanel = new CustomParametersManagerPanel(
                container,
                customParametersService,
                objectCustomValuesService,
                validationService,
                errorHandler
            );

            await this.customParametersManagerPanel.initialize();

            this.isInitialized = true;
            console.log('‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', error);
            this.showErrorMessage();
        }
    }

    /**
     * –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
     */
    async waitForDatabase() {
        return new Promise((resolve, reject) => {
            let attempts = 0;
            const maxAttempts = 150; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –µ—â–µ –±–æ–ª—å—à–µ

            const checkDatabase = () => {
                attempts++;

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                const dbExists = window.db; // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º window.db –≤–º–µ—Å—Ç–æ window.database
                const dbReady = dbExists && (dbExists.db || dbExists.isInitialized);
                const hasDbMethods = dbExists && typeof dbExists.getCustomParameters === 'function';
                const dbVersion = dbExists && dbExists.db && dbExists.db.version;

                if (attempts % 10 === 0 || attempts <= 5) { // –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–µ 10 –ø–æ–ø—ã—Ç–æ–∫ –∏–ª–∏ –ø–µ—Ä–≤—ã–µ 5
                    console.log(`–ü–æ–ø—ã—Ç–∫–∞ ${attempts}/${maxAttempts}:`);
                    console.log('- window.db:', !!dbExists);
                    console.log('- db.db:', !!(dbExists && dbExists.db));
                    console.log('- db.isInitialized:', !!(dbExists && dbExists.isInitialized));
                    console.log('- db.getCustomParameters:', !!(dbExists && dbExists.getCustomParameters));
                    console.log('- db version:', dbVersion);
                }

                // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ–ª–∂–Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å, –±—ã—Ç—å –≥–æ—Ç–æ–≤–∞ –∏ –∏–º–µ—Ç—å –≤—Å–µ –Ω—É–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã
                if (hasDbMethods && dbReady) {
                    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞ (–ø–æ–ø—ã—Ç–∫–∞:', attempts, ')');
                    console.log('- –í–µ—Ä—Å–∏—è –ë–î:', dbVersion);
                    resolve();
                    return;
                }

                if (attempts >= maxAttempts) {
                    console.warn(`‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (${maxAttempts} –ø–æ–ø—ã—Ç–æ–∫)`);
                    console.warn('–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:');
                    console.warn('- window.db:', !!dbExists);
                    console.warn('- hasDbMethods:', hasDbMethods);
                    console.warn('- dbReady:', dbReady);

                    // –ü—Ä–æ–±—É–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É, –≤–æ–∑–º–æ–∂–Ω–æ —á—Ç–æ-—Ç–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç
                    resolve();
                    return;
                }

                setTimeout(checkDatabase, 300); // –ï—â–µ –±–æ–ª—å—à–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
            };

            checkDatabase();
        });
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
     */
    async initializeLocalDI() {
        console.log('üèóÔ∏è –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...');

        // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã
        const configService = {
            get: (key) => {
                const defaults = {
                    'performance.cache': { ttl: 300000, maxSize: 100 },
                    'database.limits': {
                        maxParametersPerObject: 50,
                        maxParameterNameLength: 100,
                        maxOptionsCount: 50
                    }
                };
                return defaults[key];
            },
            getDatabaseLimits: () => ({
                maxParametersPerObject: 50,
                maxParameterNameLength: 100,
                maxOptionsCount: 50
            })
        };

        const validationService = {
            validate: async (data, rules) => []
        };

        const errorHandler = {
            handleError: async (error, context) => {
                console.error('Error:', error, context);
            }
        };

        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        const container = {
            services: new Map(),

            register: function(name, service) {
                this.services.set(name, service);
            },

            get: function(name) {
                if (this.services.has(name)) {
                    return this.services.get(name);
                }

                // –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É
                switch (name) {
                    case 'Database':
                        if (!window.db) {
                            throw new Error('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ database.js –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.');
                        }
                        if (typeof window.db.getCustomParameters !== 'function') {
                            throw new Error('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏. –í–µ—Ä—Å–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–µ–π.');
                        }
                        this.services.set(name, window.db);
                        return window.db;
                    case 'ConfigService':
                        this.services.set(name, configService);
                        return configService;
                    case 'ValidationService':
                        this.services.set(name, validationService);
                        return validationService;
                    case 'ErrorHandlingService':
                        this.services.set(name, errorHandler);
                        return errorHandler;
                    case 'CustomParametersService':
                        const customParamsService = new CustomParametersService(
                            this.get('Database'),
                            this.get('ValidationService'),
                            this.get('ConfigService'),
                            this.get('ErrorHandlingService')
                        );
                        this.services.set(name, customParamsService);
                        return customParamsService;
                    case 'ObjectCustomValuesService':
                        const valuesService = new ObjectCustomValuesService(
                            this.get('Database'),
                            this.get('CustomParametersService'),
                            this.get('ValidationService'),
                            this.get('ConfigService'),
                            this.get('ErrorHandlingService')
                        );
                        this.services.set(name, valuesService);
                        return valuesService;
                    default:
                        throw new Error(`Service ${name} not found`);
                }
            }
        };

        this.diContainer = container;

        console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–∑–¥–∞–Ω:', this.diContainer);
        console.log('‚úÖ –ú–µ—Ç–æ–¥ get –¥–æ—Å—Ç—É–ø–µ–Ω:', typeof this.diContainer.get);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     */
    showErrorMessage() {
        const container = document.getElementById('custom-parameters-manager-container');
        if (container) {
            container.innerHTML = `
                <div class="text-center py-12">
                    <svg class="mx-auto h-12 w-12 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 48 48">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z"/>
                    </svg>
                    <h3 class="mt-2 text-sm font-medium text-gray-900">
                        –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
                    </h3>
                    <p class="mt-1 text-sm text-gray-500">
                        –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.<br>
                        –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.
                    </p>
                    <div class="mt-6">
                        <button
                            id="reload-page-btn"
                            class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg"
                        >
                            –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                        </button>
                    </div>
                </div>
            `;

            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
            const reloadBtn = container.querySelector('#reload-page-btn');
            if (reloadBtn) {
                reloadBtn.addEventListener('click', () => location.reload());
            }
        }
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
     */
    destroy() {
        if (this.customParametersManagerPanel) {
            this.customParametersManagerPanel.destroy();
            this.customParametersManagerPanel = null;
        }

        this.isInitialized = false;
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
let customParametersSettingsInitializer = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', async () => {
    customParametersSettingsInitializer = new CustomParametersSettingsInitializer();

    // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const initWithRetry = async (attempt = 1) => {
        try {
            await customParametersSettingsInitializer.initialize();
        } catch (error) {
            if (attempt < 3) {
                console.log(`–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (${attempt + 1}/3) —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...`);
                setTimeout(() => initWithRetry(attempt + 1), 2000);
            } else {
                console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ—Å–ª–µ 3 –ø–æ–ø—ã—Ç–æ–∫:', error);
            }
        }
    };

    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–æ 3 —Å–µ–∫—É–Ω–¥
    setTimeout(() => initWithRetry(), 3000);
});

// –û—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', () => {
    if (customParametersSettingsInitializer) {
        customParametersSettingsInitializer.destroy();
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = CustomParametersSettingsInitializer;
}

// –≠–∫—Å–ø–æ—Ä—Ç –≤ window –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞
if (typeof window !== 'undefined') {
    window.CustomParametersSettingsInitializer = CustomParametersSettingsInitializer;
}