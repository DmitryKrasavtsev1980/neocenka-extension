/**
 * –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±–ª–∞—Å—Ç—å—é
 * –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É—é—â–∏–π —Å–ª–æ–π –¥–ª—è –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏
 */

class AreaPage {
    constructor() {
        this.currentAreaId = null;
        this.currentArea = null;
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        this.processing = {
            parsing: false,
            updating: false,
            addresses: false,
            duplicates: false
        };
        
        // –ú–µ–Ω–µ–¥–∂–µ—Ä—ã (–±—É–¥—É—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≤ init())
        this.dataState = null;
        this.eventBus = null;
        this.progressManager = null;
        this.uiManager = null;
        this.mapManager = null;
        this.parsingManager = null;
        this.addressManager = null;
        this.duplicatesManager = null;
        this.segmentsManager = null;
        
        // –£—Ç–∏–ª–∏—Ç—ã
        this.geoUtils = new GeoUtils();
        this.spatialManager = spatialIndexManager;
        this.osmAPI = new OSMOverpassAPI();
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ –¥—É–±–ª–µ–π
        this.selectedDuplicates = new Set();
        
        // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–µ—Ä–≤–∏—Å–∞–º–∏
        this.servicesIntegration = null;
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç–ª–∞–¥–∫–∏
     */
    async isDebugEnabled() {
        try {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            if (!window.db || !window.db.db) {
                return false;
            }
            
            const settings = await window.db.getSettings();
            return settings.find(s => s.key === 'debug_enabled')?.value === true;
        } catch (error) {
            return false;
        }
    }
    
    /**
     * –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    async debugLog(message, ...args) {
        if (await this.isDebugEnabled()) {
            console.log(message, ...args);
        }
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª–∏–≥–æ–Ω–∞ –≤ –æ–±–ª–∞—Å—Ç–∏
     */
    hasAreaPolygon() {
        return this.currentArea && 
               this.currentArea.polygon && 
               Array.isArray(this.currentArea.polygon) && 
               this.currentArea.polygon.length >= 3;
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ ID –æ–±–ª–∞—Å—Ç–∏ –∏–∑ URL
     */
    getAreaIdFromUrl() {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get('id');
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
     */
    async initUIComponents() {
        try {
            // UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è –≤ HTML
            // –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
            console.log('‚úÖ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:', error);
        }
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    async init() {
        try {
            console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±–ª–∞—Å—Ç—å—é');
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            await this.initUIComponents();
            
            // –ü–æ–ª—É—á–µ–Ω–∏–µ ID –æ–±–ª–∞—Å—Ç–∏ –∏–∑ URL
            this.currentAreaId = this.getAreaIdFromUrl();
            if (!this.currentAreaId) {
                console.error('‚ùå ID –æ–±–ª–∞—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ URL');
                return;
            }
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
            await this.initArchitecture();
            
            // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–∏
            await this.loadAreaData();
            
            // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π (–ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö)
            this.bindEvents();
            
            console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±–ª–∞—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error);
        }
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
     */
    async initArchitecture() {
        try {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è–¥—Ä–∞
            this.dataState = new DataState();
            this.eventBus = new EventBus();
            this.progressManager = new ProgressManager(this.eventBus);
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
            this.uiManager = new UIManager(this.dataState, this.eventBus, this.progressManager);
            this.mapManager = new MapManager(this.dataState, this.eventBus, this.progressManager);
            this.parsingManager = new ParsingManager(this.dataState, this.eventBus, this.progressManager);
            this.addressManager = new AddressManager(this.dataState, this.eventBus, this.progressManager);
            this.duplicatesManager = new DuplicatesManager(this.dataState, this.eventBus, this.progressManager);
            this.segmentsManager = new SegmentsManager(this.dataState, this.eventBus, this.progressManager);
            
            console.log('‚úÖ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            console.log('üîß UIManager —Å–æ–∑–¥–∞–Ω:', !!this.uiManager);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã:', error);
        }
    }
    
    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–∏
     */
    async loadAreaData() {
        try {
            console.log('üìä –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–∏:', this.currentAreaId);
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            if (!window.db) {
                console.error('‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
                this.showMainContent(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
                return;
            }
            
            // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
            if (!window.db.db) {
                console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
                await window.db.init();
            }
            
            // –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±–ª–∞—Å—Ç–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            this.currentArea = await window.db.getMapArea(this.currentAreaId);
            if (!this.currentArea) {
                console.error('‚ùå –û–±–ª–∞—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', this.currentAreaId);
                this.showMainContent(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
                return;
            }
            
            // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ DataState –Ω–∞–ø—Ä—è–º—É—é
            this.dataState.currentAreaId = this.currentAreaId;
            this.dataState.currentArea = this.currentArea;
            
            // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ –æ–±–ª–∞—Å—Ç–∏
            this.eventBus.emit(CONSTANTS.EVENTS.AREA_LOADED, this.currentArea);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
            this.showMainContent();
            
            // UI —ç–ª–µ–º–µ–Ω—Ç—ã –±—É–¥—É—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —Å–æ–±—ã—Ç–∏–µ AREA_LOADED
            console.log('‚úÖ –°–æ–±—ã—Ç–∏–µ AREA_LOADED –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –º–µ–Ω–µ–¥–∂–µ—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∞—é—Ç –∑–∞–≥—Ä—É–∑–∫—É');
            
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.currentArea.name);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–∏:', error);
            this.showMainContent(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     */
    showError(message) {
        if (this.uiManager) {
            this.uiManager.showNotification(message, 'error');
        } else {
            console.error('‚ùå', message);
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
     */
    showSuccess(message) {
        if (this.uiManager) {
            this.uiManager.showNotification(message, 'success');
        } else {
            console.log('‚úÖ', message);
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    showInfo(message) {
        if (this.uiManager) {
            this.uiManager.showNotification(message, 'info');
        } else {
            console.info('‚ÑπÔ∏è', message);
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    showMainContent() {
        try {
            const contentElement = document.getElementById('area-content');
            if (contentElement) {
                contentElement.classList.remove('hidden');
                console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω');
            } else {
                console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç area-content –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', error);
        }
    }
    
    /**
     * –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
     */
    bindEvents() {
        try {
            // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã
            if (this.eventBus) {
                this.eventBus.on(CONSTANTS.EVENTS.MAP_INITIALIZED, () => {
                    console.log('üìç –ö–∞—Ä—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±–ª–∞—Å—Ç—å"
            const editAreaBtn = document.getElementById('editAreaBtn');
            if (editAreaBtn) {
                console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞, –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫');
                editAreaBtn.addEventListener('click', (e) => {
                    e.preventDefault();
                    console.log('üîß –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–ª–∞—Å—Ç–∏');
                    this.openEditAreaModal();
                });
            } else {
                console.error('‚ùå –ö–Ω–æ–ø–∫–∞ editAreaBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ DOM');
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–∞–Ω–µ–ª–µ–π
            const panelBtn = document.getElementById('panelBtn');
            const panelDropdown = document.getElementById('panelDropdown');
            if (panelBtn && panelDropdown) {
                panelBtn.addEventListener('click', (e) => {
                    e.preventDefault();
                    panelDropdown.classList.toggle('hidden');
                });
                
                // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –ø–∞–Ω–µ–ª–∏
                document.addEventListener('click', (e) => {
                    if (!panelBtn.contains(e.target) && !panelDropdown.contains(e.target)) {
                        panelDropdown.classList.add('hidden');
                    }
                });
            }
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π –ø–∞–Ω–µ–ª–µ–π —á–µ—Ä–µ–∑ UIManager
            if (this.uiManager) {
                this.uiManager.initPanelToggles();
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—Ç—ã —á–µ—Ä–µ–∑ MapManager
            this.bindMapButtons();
            
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ overlay
            this.bindModalEvents();
            
            console.log('‚úÖ –°–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω—ã');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π:', error);
        }
    }
    
    /**
     * –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—Ç—ã
     */
    bindMapButtons() {
        // –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—ã
        const refreshMapBtn = document.getElementById('refreshMapBtn');
        if (refreshMapBtn) {
            refreshMapBtn.addEventListener('click', (e) => {
                e.preventDefault();
                if (this.mapManager) {
                    this.mapManager.refreshMapData();
                }
            });
        }
        
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—Ç—ã –ø—Ä–∏–≤—è–∑–∞–Ω—ã');
    }
    
    /**
     * –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
     */
    bindModalEvents() {
        // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–ª–∞—Å—Ç–∏
        const editAreaModal = document.getElementById('editAreaModal');
        if (editAreaModal) {
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ overlay
            editAreaModal.addEventListener('click', (e) => {
                if (e.target === editAreaModal) {
                    this.closeEditAreaModal();
                }
            });
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            const editAreaForm = document.getElementById('editAreaForm');
            if (editAreaForm) {
                editAreaForm.addEventListener('submit', (e) => {
                    e.preventDefault();
                    console.log('üìù –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–ª–∞—Å—Ç–∏');
                    this.handleEditAreaSubmit();
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞"
            const cancelEditArea = document.getElementById('cancelEditArea');
            if (cancelEditArea) {
                cancelEditArea.addEventListener('click', (e) => {
                    e.preventDefault();
                    console.log('‚ùå –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–ª–∞—Å—Ç–∏');
                    this.closeEditAreaModal();
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–ª–µ–π URL –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫
            const editAvitoUrl = document.getElementById('editAvitoUrl');
            const editCianUrl = document.getElementById('editCianUrl');
            
            if (editAvitoUrl) {
                editAvitoUrl.addEventListener('input', () => {
                    this.updateFilterButtons();
                });
            }
            
            if (editCianUrl) {
                editCianUrl.addEventListener('input', () => {
                    this.updateFilterButtons();
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
            const openAvitoBtn = document.getElementById('openAvitoBtn');
            const openCianBtn = document.getElementById('openCianBtn');
            
            if (openAvitoBtn) {
                openAvitoBtn.addEventListener('click', (e) => {
                    e.preventDefault();
                    this.openAvitoFilter();
                });
            }
            
            if (openCianBtn) {
                openCianBtn.addEventListener('click', (e) => {
                    e.preventDefault();
                    this.openCianFilter();
                });
            }
        }
    }
    
    /**
     * –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–ª–∞—Å—Ç–∏
     */
    openEditAreaModal() {
        try {
            console.log('üöÄ –í—ã–∑–æ–≤ openEditAreaModal');
            console.log('üìä currentArea:', this.currentArea);
            console.log('üîß uiManager:', this.uiManager);
            
            if (!this.currentArea) {
                console.error('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
                return;
            }
            
            // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã —Ç–µ–∫—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            const editAreaName = document.getElementById('editAreaName');
            const editAvitoUrl = document.getElementById('editAvitoUrl');
            const editCianUrl = document.getElementById('editCianUrl');
            
            console.log('üîç –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã:', { editAreaName, editAvitoUrl, editCianUrl });
            
            if (editAreaName) editAreaName.value = this.currentArea.name || '';
            if (editAvitoUrl) editAvitoUrl.value = this.currentArea.avito_filter_url || '';
            if (editCianUrl) editCianUrl.value = this.currentArea.cian_filter_url || '';
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π
            this.updateFilterButtons();
            
            // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            if (this.uiManager) {
                console.log('üì± –ò—Å–ø–æ–ª—å–∑—É–µ–º UIManager –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
                this.uiManager.openModal('editAreaModal');
            } else {
                console.log('üì± Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ DOM');
                // Fallback –µ—Å–ª–∏ UIManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
                const modal = document.getElementById('editAreaModal');
                if (modal) {
                    modal.classList.remove('hidden');
                    console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ (fallback)');
                } else {
                    console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ editAreaModal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
                }
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
        }
    }
    
    /**
     * –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–ª–∞—Å—Ç–∏
     */
    closeEditAreaModal() {
        try {
            if (this.uiManager) {
                this.uiManager.closeModal('editAreaModal');
            } else {
                // Fallback –µ—Å–ª–∏ UIManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
                const modal = document.getElementById('editAreaModal');
                if (modal) {
                    modal.classList.add('hidden');
                }
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
        }
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–ª–∞—Å—Ç–∏
     */
    async handleEditAreaSubmit() {
        try {
            const editAreaName = document.getElementById('editAreaName');
            const editAvitoUrl = document.getElementById('editAvitoUrl');
            const editCianUrl = document.getElementById('editCianUrl');
            
            if (!editAreaName || !editAreaName.value.trim()) {
                console.error('‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –æ–±–ª–∞—Å—Ç–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
                return;
            }
            
            const updatedData = {
                ...this.currentArea, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤–∫–ª—é—á–∞—è –ø–æ–ª–∏–≥–æ–Ω
                id: this.currentAreaId,
                name: editAreaName.value.trim(),
                avito_filter_url: editAvitoUrl?.value?.trim() || null,
                cian_filter_url: editCianUrl?.value?.trim() || null,
                updated_at: new Date()
            };
            
            console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏:', updatedData);
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±–ª–∞—Å—Ç–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            await window.db.updateMapArea(updatedData);
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
            this.currentArea = { ...this.currentArea, ...updatedData };
            this.dataState.currentArea = this.currentArea;
            
            // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
            this.eventBus.emit(CONSTANTS.EVENTS.AREA_UPDATED, this.currentArea);
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
            this.updateAreaInfo();
            
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            this.closeEditAreaModal();
            
            console.log('‚úÖ –û–±–ª–∞—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', this.currentArea.name);
            
            // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
            if (this.uiManager && this.uiManager.showNotification) {
                this.uiManager.showNotification({
                    message: '–û–±–ª–∞—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
                    type: 'success'
                });
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±–ª–∞—Å—Ç–∏:', error);
            
            // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            if (this.uiManager && this.uiManager.showNotification) {
                this.uiManager.showNotification({
                    message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–±–ª–∞—Å—Ç–∏',
                    type: 'error'
                });
            }
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±–ª–∞—Å—Ç–∏ –≤ UI
     */
    updateAreaInfo() {
        try {
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            const areaTitle = document.querySelector('.area-title, h1');
            if (areaTitle && this.currentArea) {
                areaTitle.textContent = this.currentArea.name;
            }
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            if (this.currentArea) {
                document.title = `${this.currentArea.name} - –ù–µ–æ—Ü–µ–Ω–∫–∞`;
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±–ª–∞—Å—Ç–∏:', error);
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤
     */
    updateFilterButtons() {
        const avitoUrl = document.getElementById('editAvitoUrl')?.value?.trim();
        const cianUrl = document.getElementById('editCianUrl')?.value?.trim();
        
        const avitoBtn = document.getElementById('openAvitoBtn');
        const cianBtn = document.getElementById('openCianBtn');
        
        if (avitoBtn) {
            avitoBtn.disabled = !avitoUrl || !this.isValidUrl(avitoUrl);
        }
        
        if (cianBtn) {
            cianBtn.disabled = !cianUrl || !this.isValidUrl(cianUrl);
        }
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ URL
     */
    isValidUrl(string) {
        try {
            new URL(string);
            return true;
        } catch (_) {
            return false;
        }
    }
    
    /**
     * –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ Avito –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
     */
    openAvitoFilter() {
        const avitoUrl = document.getElementById('editAvitoUrl')?.value?.trim();
        if (avitoUrl && this.isValidUrl(avitoUrl)) {
            chrome.tabs.create({ url: avitoUrl });
        }
    }
    
    /**
     * –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ Cian –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
     */
    openCianFilter() {
        const cianUrl = document.getElementById('editCianUrl')?.value?.trim();
        if (cianUrl && this.isValidUrl(cianUrl)) {
            chrome.tabs.create({ url: cianUrl });
        }
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–∫–∑–µ–º–ø–ª—è—Ä—É
let areaPage;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', async () => {
    try {
        // –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if (window.db && !window.db.db) {
            console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
            await window.db.init();
        }
        
        areaPage = new AreaPage();
        await areaPage.init();
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error);
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
if (typeof window !== 'undefined') {
    window.areaPage = areaPage;
}