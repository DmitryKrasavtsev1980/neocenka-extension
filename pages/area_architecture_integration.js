/**
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–ª–æ–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã area.js
 * –†–∞—Å—à–∏—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ–ª–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
 */

class AreaArchitectureIntegration {
    constructor() {
        this.applicationController = null;
        this.diContainer = null;
        this.segmentController = null;
        this.mapController = null;
        this.legacyAreaPage = null;
        this.initialized = false;
        
        this.initialize();
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è v0.1 –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
     */
    async initialize() {
        try {
            await this.debugLog('üèóÔ∏è Area: –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã...');
            
            // 1. –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ  
            await this.waitForDatabaseReady();
            
            // 2. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º AI –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ª—é–±—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
            await this.syncAISettings();
            
            // 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º ApplicationController (—Å–æ–∑–¥–∞–µ—Ç DIContainer)
            await this.initializeApplicationController();
            
            // 4. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è —Ñ–ª–∏–ø–ø–∏–Ω–≥-–æ—Ç—á—ë—Ç–∞
            await this.registerFlippingServices();
            
            // 5. –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã
            await this.initializeControllers();
            
            // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å DIContainer –¥–ª—è AI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
            const diReady = await this.checkDIContainerReady();
            if (diReady) {
                // 7. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ DIContainer –≥–æ—Ç–æ–≤
                await this.initializeAIInterface();
            } else {
                console.warn('‚ö†Ô∏è AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å DIContainer');
            }
            
            // 8. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å legacy –∫–æ–¥–æ–º
            await this.setupLegacyIntegration();
            
            // 5. –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è
            this.setupEventListeners();
            
            this.initialized = true;
            await this.debugLog('‚úÖ Area: –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
            
        } catch (error) {
            console.error('‚ùå Area: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã:', error);
        }
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ApplicationController
     */
    async initializeApplicationController() {
        console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ApplicationController...');
        
        if (typeof ApplicationController === 'undefined') {
            console.error('‚ùå ApplicationController –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            throw new Error('ApplicationController –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
        }
        
        // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ –≥–æ—Ç–æ–≤–∞ –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ
        this.applicationController = new ApplicationController();
        console.log('‚úÖ ApplicationController —Å–æ–∑–¥–∞–Ω');
        
        this.diContainer = this.applicationController.container;
        console.log('üì¶ DIContainer –ø–æ–ª—É—á–µ–Ω:', !!this.diContainer);
        
        // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        let attempts = 0;
        while (!this.applicationController.state.initialized && attempts < 50) {
            await new Promise(resolve => setTimeout(resolve, 100));
            attempts++;
        }
        
        if (!this.applicationController.state.initialized) {
            console.error('‚ùå ApplicationController –Ω–µ —Å–º–æ–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–∞ 5 —Å–µ–∫—É–Ω–¥');
            throw new Error('ApplicationController –Ω–µ —Å–º–æ–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–∞ 5 —Å–µ–∫—É–Ω–¥');
        }
        
        console.log('‚úÖ ApplicationController –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        await this.debugLog('‚úÖ Area: ApplicationController –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
    
    /**
     * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è —Ñ–ª–∏–ø–ø–∏–Ω–≥-–æ—Ç—á—ë—Ç–∞
     */
    async registerFlippingServices() {
        try {
            // FlippingController –∏ RealEstateObjectService —Ç–µ–ø–µ—Ä—å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –≤ ApplicationController
            // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –æ—Å—Ç–∞–≤–ª–µ–Ω –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
            
            await this.debugLog('‚úÖ Area: –°–µ—Ä–≤–∏—Å—ã —Ñ–ª–∏–ø–ø–∏–Ω–≥-–æ—Ç—á—ë—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –≤ ApplicationController');

        } catch (error) {
            console.error('‚ùå Area: –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ —Ñ–ª–∏–ø–ø–∏–Ω–≥:', error);
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
     */
    async initializeControllers() {
        // SegmentController
        this.segmentController = this.applicationController.controllers.get('SegmentController');
        if (!this.segmentController) {
            await this.debugLog('‚ö†Ô∏è Area: SegmentController –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ApplicationController');
        } else {
            await this.debugLog('‚úÖ Area: SegmentController –≥–æ—Ç–æ–≤');
        }
        
        // MapController  
        this.mapController = this.applicationController.controllers.get('MapController');
        if (!this.mapController) {
            await this.debugLog('‚ö†Ô∏è Area: MapController –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ApplicationController');
        } else {
            await this.debugLog('‚úÖ Area: MapController –≥–æ—Ç–æ–≤');
        }

        // FlippingController - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ ApplicationController
        try {
            this.flippingController = await this.diContainer.get('FlippingController');
            await this.debugLog('‚úÖ Area: FlippingController –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ ApplicationController');
            
            // –î–µ–ª–∞–µ–º FlippingController –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
            window.flippingController = this.flippingController;
        } catch (error) {
            await this.debugLog('‚ö†Ô∏è Area: FlippingController –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ApplicationController:', error.message);
            this.flippingController = null;
            window.flippingController = null;
        }
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
     */
    async initializeAIInterface() {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–ª–∞—Å—Å–æ–≤
            if (typeof AIChatInterface === 'undefined') {
                await this.debugLog('‚ö†Ô∏è AIChatInterface –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é AI');
                return;
            }
            
            console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è AI —Å–µ—Ä–≤–∏—Å–æ–≤ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏...');
            
            // –°–æ–∑–¥–∞–µ–º UniversalAIService –∑–∞–Ω–æ–≤–æ, –æ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ ConfigService
            const universalAI = this.diContainer.get('UniversalAIService');
            console.log('‚úÖ UniversalAIService —Å–æ–∑–¥–∞–Ω –∑–∞–Ω–æ–≤–æ');
            
            // –ü–æ–ª—É—á–∞–µ–º AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–∑ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            const aiInterface = this.diContainer.get('AIChatInterface');
            
            // –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            let attempts = 0;
            while (!aiInterface.isInitialized && attempts < 50) {
                await new Promise(resolve => setTimeout(resolve, 100));
                attempts++;
            }
            
            if (aiInterface.isInitialized) {
                await this.debugLog('‚úÖ Area: AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                console.log('‚úÖ AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –¥–ª—è –ª–µ–≥–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
                this.aiInterface = aiInterface;
                this.universalAI = universalAI;
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å AI
                setTimeout(async () => {
                    try {
                        const isAvailable = await universalAI.isAvailable();
                        const providers = await universalAI.getAvailableProviders();
                        console.log('üéØ AI –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:', isAvailable);
                        console.log('üì° –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã:', providers);
                        
                        if (isAvailable) {
                            console.log('üéâ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
                        }
                    } catch (error) {
                        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ AI –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:', error);
                    }
                }, 1000);
                
            } else {
                await this.debugLog('‚ö†Ô∏è Area: AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ —Å–º–æ–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–∞ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è');
                console.warn('‚ö†Ô∏è AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ —Å–º–æ–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–∞ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è');
            }
            
        } catch (error) {
            await this.debugLog('‚ùå Area: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:', error.message);
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:', error);
        }
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å legacy –∫–æ–¥–æ–º
     */
    async setupLegacyIntegration() {
        // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ legacy AreaPage
        let attempts = 0;
        while (!window.areaPage && attempts < 50) {
            await new Promise(resolve => setTimeout(resolve, 100));
            attempts++;
        }
        
        if (window.areaPage) {
            this.legacyAreaPage = window.areaPage;
            await this.debugLog('‚úÖ Area: Legacy AreaPage –Ω–∞–π–¥–µ–Ω');
            
            // –†–∞—Å—à–∏—Ä—è–µ–º legacy –æ–±—ä–µ–∫—Ç
            this.extendLegacyWithV01Methods();
            
            // –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏
            await this.integrateLegacyManagers();
        } else {
            await this.debugLog('‚ö†Ô∏è Area: Legacy AreaPage –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
    }
    
    /**
     * –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ legacy –æ–±—ä–µ–∫—Ç–∞ –º–µ—Ç–æ–¥–∞–º–∏ v0.1
     */
    extendLegacyWithV01Methods() {
        if (!this.legacyAreaPage) return;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ—Å—Ç—É–ø –∫ v0.1 –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ
        this.legacyAreaPage.v01 = {
            applicationController: this.applicationController,
            diContainer: this.diContainer,
            segmentController: this.segmentController,
            mapController: this.mapController,
            
            // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
            getService: (serviceName) => {
                return this.diContainer.get(serviceName);
            },
            
            // –ü–æ–ª—É—á–µ–Ω–∏–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            getUIComponent: (componentName) => {
                return this.diContainer.get(componentName);
            },
            
            // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ–≥–º–µ–Ω—Ç–∞–º–∏ —á–µ—Ä–µ–∑ v0.1
            segments: {
                create: async (segmentData) => {
                    if (this.segmentController) {
                        return await this.segmentController.createSegment(segmentData);
                    }
                    throw new Error('SegmentController –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
                },
                
                update: async (segmentId, segmentData) => {
                    if (this.segmentController) {
                        return await this.segmentController.updateSegment(segmentId, segmentData);
                    }
                    throw new Error('SegmentController –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
                },
                
                delete: async (segmentId) => {
                    if (this.segmentController) {
                        return await this.segmentController.deleteSegment(segmentId);
                    }
                    throw new Error('SegmentController –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
                },
                
                showModal: (mode, segmentData = null) => {
                    const segmentModal = this.diContainer.get('SegmentModal');
                    if (segmentModal) {
                        return segmentModal.show(mode, segmentData);
                    }
                    throw new Error('SegmentModal –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
                }
            },
            
            // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ä—Ç–æ–π —á–µ—Ä–µ–∑ v0.1
            map: {
                render: (container, options = {}) => {
                    if (this.mapController) {
                        return this.mapController.createMap(container, options);
                    }
                    throw new Error('MapController –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
                },
                
                updateMarkers: (addresses) => {
                    if (this.mapController) {
                        return this.mapController.updateAddressMarkers(addresses);
                    }
                    throw new Error('MapController –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
                }
            },
            
            // AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            ai: this.aiInterface || null,
            
            // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å AI
            openAIChat: () => {
                if (this.aiInterface) {
                    this.aiInterface.openChat();
                } else {
                    console.warn('AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
                }
            },
            
            analyzeListings: (listings) => {
                if (this.aiInterface) {
                    this.aiInterface.analyzeDuplicates(listings);
                } else {
                    console.warn('AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
                }
            },
            
            createSegmentation: (area, objects) => {
                if (this.aiInterface) {
                    this.aiInterface.createSegmentation(area, objects);
                } else {
                    console.warn('AI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
                }
            }
        };
        
        this.debugLog('‚úÖ Area: Legacy AreaPage —Ä–∞—Å—à–∏—Ä–µ–Ω –º–µ—Ç–æ–¥–∞–º–∏ v0.1');
    }
    
    /**
     * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ legacy –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏
     */
    async integrateLegacyManagers() {
        if (!this.legacyAreaPage) return;
        
        // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å SegmentsManager
        if (this.legacyAreaPage.segmentsManager && this.segmentController) {
            // –ü–æ–¥–º–µ–Ω—è–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –º–µ—Ç–æ–¥—ã legacy –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –Ω–∞ v0.1
            const originalShowModal = this.legacyAreaPage.segmentsManager.showSegmentModal;
            this.legacyAreaPage.segmentsManager.showSegmentModal = (mode, segmentData = null) => {
                try {
                    return this.legacyAreaPage.v01.segments.showModal(mode, segmentData);
                } catch (error) {
                    // Fallback –Ω–∞ original –º–µ—Ç–æ–¥
                    return originalShowModal.call(this.legacyAreaPage.segmentsManager, mode, segmentData);
                }
            };
            
            await this.debugLog('‚úÖ Area: SegmentsManager –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å v0.1');
        }
        
        // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å MapManager
        if (this.legacyAreaPage.mapManager && this.mapController) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ legacy MapManager –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            this.mapController.legacyMapManager = this.legacyAreaPage.mapManager;
            
            await this.debugLog('‚úÖ Area: MapManager –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å v0.1');
        }
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        const eventBus = this.diContainer.get('EventBus');
        
        // –°–æ–±—ã—Ç–∏—è —Å–µ–≥–º–µ–Ω—Ç–æ–≤
        eventBus.on('segment:created', async (segmentData) => {
            await this.debugLog('‚úÖ Area: Segment created:', segmentData.id);
            
            // –£–≤–µ–¥–æ–º–ª—è–µ–º legacy –∫–æ–¥
            if (this.legacyAreaPage && this.legacyAreaPage.loadSegments) {
                this.legacyAreaPage.loadSegments();
            }
        });
        
        eventBus.on('segment:updated', async (segmentData) => {
            await this.debugLog('‚úÖ Area: Segment updated:', segmentData.id);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –∏ –∫–∞—Ä—Ç—É
            if (this.legacyAreaPage) {
                if (this.legacyAreaPage.loadSegments) {
                    this.legacyAreaPage.loadSegments();
                }
                if (this.legacyAreaPage.displaySegmentsOnMap) {
                    this.legacyAreaPage.displaySegmentsOnMap();
                }
            }
        });
        
        eventBus.on('segment:deleted', async (segmentId) => {
            await this.debugLog('‚úÖ Area: Segment deleted:', segmentId);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            if (this.legacyAreaPage && this.legacyAreaPage.loadSegments) {
                this.legacyAreaPage.loadSegments();
            }
        });
    }
    
    /**
     * –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
     */
    async waitForDatabaseReady() {
        let attempts = 0;
        const maxAttempts = 100; // 10 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º
        
        while (attempts < maxAttempts) {
            try {
                if (window.db && typeof window.db.getAll === 'function') {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ë–î –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ
                    await window.db.getAll('addresses');
                    return;
                }
            } catch (error) {
                // –ë–î –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∂–¥–∞—Ç—å
            }
            
            await new Promise(resolve => setTimeout(resolve, 100));
            attempts++;
        }
        
        throw new Error('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –≥–æ—Ç–æ–≤–∞ –ø–æ—Å–ª–µ 10 —Å–µ–∫—É–Ω–¥ –æ–∂–∏–¥–∞–Ω–∏—è');
    }

    /**
     * –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
     */
    async debugLog(message, ...args) {
        try {
            if (window.db && window.db.db) {
                const settings = await window.db.getSettings();
                const debugEnabled = settings.find(s => s.key === 'debug_enabled')?.value === true;
            }
        } catch (error) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        }
    }
    
    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç AI –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ IndexedDB –≤ ConfigService
     */
    async syncAISettings() {
        try {
            console.log('üîÑ Area: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è AI –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
            await this.debugLog('üîÑ Area: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è AI –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
            
            console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:', {
                'window.db': !!window.db,
                'window.configService': !!window.configService
            });

            if (!window.db) {
                console.log('‚ö†Ô∏è Area: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ AI –Ω–∞—Å—Ç—Ä–æ–µ–∫');
                await this.debugLog('‚ö†Ô∏è Area: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ AI –Ω–∞—Å—Ç—Ä–æ–µ–∫');
                return;
            }

            if (!window.configService) {
                console.log('‚ö†Ô∏è Area: ConfigService –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ AI –Ω–∞—Å—Ç—Ä–æ–µ–∫');
                await this.debugLog('‚ö†Ô∏è Area: ConfigService –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ AI –Ω–∞—Å—Ç—Ä–æ–µ–∫');
                return;
            }

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ YandexGPT –∏–∑ –±–∞–∑—ã
            console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ YandexGPT –∏–∑ –±–∞–∑—ã...');
            const yandexApiKey = await window.db.get('settings', 'yandex_api_key');
            console.log('üìã YandexGPT API Key:', yandexApiKey ? '–Ω–∞–π–¥–µ–Ω' : '–Ω–µ –Ω–∞–π–¥–µ–Ω');
            
            const yandexFolderId = await window.db.get('settings', 'yandex_folder_id');
            console.log('üìã YandexGPT Folder ID:', yandexFolderId ? '–Ω–∞–π–¥–µ–Ω' : '–Ω–µ –Ω–∞–π–¥–µ–Ω');
            
            const yandexModel = await window.db.get('settings', 'yandex_model');
            console.log('üìã YandexGPT Model:', yandexModel || '–Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');

            if (yandexApiKey && yandexFolderId) {
                const yandexConfig = {
                    apiKey: yandexApiKey.value || yandexApiKey,
                    folderId: yandexFolderId.value || yandexFolderId,
                    model: (yandexModel && yandexModel.value) || yandexModel || 'yandexgpt-lite/latest'
                };
                
                console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é YandexGPT –≤ ConfigService:', yandexConfig);
                window.configService.set('ai.providers.yandex', yandexConfig);
                
                
                console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ YandexGPT —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
                await this.debugLog('‚úÖ Area: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ YandexGPT —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
            } else {
                console.log('‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ YandexGPT –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
                await this.debugLog('‚ö†Ô∏è Area: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ YandexGPT –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
            }

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Claude –∏–∑ –±–∞–∑—ã
            const claudeApiKey = await window.db.get('settings', 'claude_api_key');
            if (claudeApiKey) {
                const claudeModel = await window.db.get('settings', 'claude_model');
                const claudeConfig = {
                    apiKey: claudeApiKey.value || claudeApiKey,
                    model: (claudeModel && claudeModel.value) || claudeModel || 'claude-3-sonnet-20240229'
                };
                
                window.configService.set('ai.providers.claude', claudeConfig);
                await this.debugLog('‚úÖ Area: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Claude —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
            }

            console.log('üéØ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è AI –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');

        } catch (error) {
            console.error('‚ùå Area: –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ AI –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å DIContainer –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è AI —Å–µ—Ä–≤–∏—Å–æ–≤
     */
    async checkDIContainerReady() {
        try {
            console.log('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DIContainer –¥–ª—è AI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
            
            // –ü–æ–ª—É—á–∞–µ–º diContainer –∏–∑ applicationController –µ—Å–ª–∏ –æ–Ω —Å–æ–∑–¥–∞–Ω  
            const diContainer = this.diContainer || this.applicationController?.container;
            
            
            if (diContainer) {
                // –ù–ï —Å–æ–∑–¥–∞–µ–º AI —Å–µ—Ä–≤–∏—Å—ã –∑–∞—Ä–∞–Ω–µ–µ - –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å DIContainer
                console.log('‚úÖ DIContainer –≥–æ—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è AI —Å–µ—Ä–≤–∏—Å–æ–≤ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏');
                await this.debugLog('üîÑ Area: DIContainer –≥–æ—Ç–æ–≤ –¥–ª—è AI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
                return true;
            } else {
                console.log('‚ö†Ô∏è DIContainer –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
                await this.debugLog('‚ö†Ô∏è Area: DIContainer –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è AI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
                return false;
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DIContainer:', error);
            return false;
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã v0.1
     */
    isReady() {
        return this.initialized && 
               this.applicationController && 
               this.applicationController.state.initialized;
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
window.addEventListener('DOMContentLoaded', () => {
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –¥–∞—Ç—å –≤—Ä–µ–º—è legacy –∫–æ–¥—É –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è
    setTimeout(() => {
        window.areaArchitectureIntegration = new AreaArchitectureIntegration();
    }, 1000);
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = AreaPageV01Integration;
}