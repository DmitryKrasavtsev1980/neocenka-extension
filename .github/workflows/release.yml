name: Release Extension

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build CSS
      run: npm run build
      
    - name: Validate manifest.json
      run: |
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å manifest.json
        node -e "
          const fs = require('fs');
          const manifest = JSON.parse(fs.readFileSync('manifest.json', 'utf8'));
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
          const required = ['manifest_version', 'name', 'version', 'permissions'];
          for (const field of required) {
            if (!manifest[field]) {
              throw new Error(\`Missing required field: \${field}\`);
            }
          }
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
          if (!/^\d+\.\d+\.\d+$/.test(manifest.version)) {
            throw new Error('Invalid version format');
          }
          
          console.log('‚úì manifest.json validation passed');
        "
        
    - name: Check file structure
      run: |
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
        required_files=(
          'manifest.json'
          'popup/popup.html'
          'background/background.js'
          'icons/icon16.png'
          'icons/icon32.png'
          'icons/icon48.png'
          'icons/icon128.png'
        )
        
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "‚ùå Missing required file: $file"
            exit 1
          fi
        done
        
        echo "‚úì File structure validation passed"
      
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Update manifest version
      run: |
        sed -i 's/"version": ".*"/"version": "${{ steps.get_version.outputs.VERSION }}"/' manifest.json
        
    - name: Create extension package
      run: |
        mkdir -p dist
        cp -r * dist/ 2>/dev/null || true
        rm -rf dist/.git dist/.github dist/node_modules dist/dist
        cd dist
        zip -r ../neocenka-extension-${{ steps.get_version.outputs.VERSION }}.zip . -x "*.git*" "node_modules/*" "dist/*"
        
    - name: Generate updates.xml
      run: |
        cat > updates.xml << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <gupdate xmlns="http://www.google.com/update2/response" protocol="2.0">
          <app appid="neocenka-extension">
            <updatecheck codebase="https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.VERSION }}/neocenka-extension-${{ steps.get_version.outputs.VERSION }}.zip" version="${{ steps.get_version.outputs.VERSION }}" />
          </app>
        </gupdate>
        EOF
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          neocenka-extension-${{ steps.get_version.outputs.VERSION }}.zip
          updates.xml
        name: Release v${{ steps.get_version.outputs.VERSION }}
        body: |
          ## Neocenka Extension v${{ steps.get_version.outputs.VERSION }}
          
          ${{ contains(steps.get_version.outputs.VERSION, '0.') && '‚ö†Ô∏è **–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏**' || '' }}
          
          ### üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞
          1. –°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª `neocenka-extension-${{ steps.get_version.outputs.VERSION }}.zip`
          2. –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª
          3. –û—Ç–∫—Ä–æ–π—Ç–µ Chrome –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ `chrome://extensions/`
          4. –í–∫–ª—é—á–∏—Ç–µ "–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞" –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
          5. –ù–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ"
          6. –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É —Å —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
          
          ### üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
          - –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
          - Updates XML: [updates.xml](https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.VERSION }}/updates.xml)
          
          ### üìã Changelog
          - –£–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
          - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫
          - –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
        draft: false
        prerelease: ${{ contains(steps.get_version.outputs.VERSION, '0.') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}